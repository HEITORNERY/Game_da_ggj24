[gd_scene load_steps=22 format=2]

[ext_resource path="res://scenes/enemy/whale.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/enemy/crabby/attack.png" type="Texture" id=2]
[ext_resource path="res://assets/enemy/crabby/idle.png" type="Texture" id=3]
[ext_resource path="res://assets/enemy/crabby/hit.png" type="Texture" id=4]
[ext_resource path="res://assets/enemy/crabby/dead.png" type="Texture" id=5]
[ext_resource path="res://assets/enemy/crabby/run.png" type="Texture" id=6]
[ext_resource path="res://scripts/enemy/crabby/crabby.gd" type="Script" id=7]
[ext_resource path="res://scripts/enemy/crabby/texture.gd" type="Script" id=8]

[sub_resource type="RectangleShape2D" id=9]

[sub_resource type="RectangleShape2D" id=10]
extents = Vector2( 150, 15.5 )

[sub_resource type="GDScript" id=13]
script/source = "extends Area2D

# Dê o nome para o objeto, é a primeira coisa a fazer
class_name CollisionArea

# Guardar a referência ao objeto de tempo, ou seja, o temporizador
onready var timer : Timer = get_node('Timer') 

# Vai precisar de 2 variáveis, uma para a vida do inimigo e outra pro tempo de invencibilidade do inimigo
export(int) var health
export(float) var invulnerability_timer

# Guardar a referência ao objeto pai do inimigo
export(NodePath) onready var enemy = get_node(enemy) as KinematicBody2D

# Guardar referência a barra de vida
export(NodePath) onready var enemy_bar = get_node(enemy_bar) as Control

# Função para inicializar a barra de vida do inimigo assim que iniciar a cena
func _ready() -> void:
	enemy_bar.init_bar(health)
	
func on_collision_area_entered(area): # Sinal que vai detectar a entrada do player na área de dano do inimigo
	if area.get_parent() is Player: # Aqui vai ser verificado se o objeto pai da área que entrou em contato é o Player
		
		var player_stats : Node = area.get_parent().get_node('Stats')
		# Essa variável vai acessar o objeto pai da área que entrou na área de colisão do inimigo
		# A partir do objeto pai é possível acessar qualquer filho, no caso o filho acessado vai ser o Stats
		# Pois em Stats está o valor do ataque do personagem
		
		var player_attack : int = player_stats.base_attack + player_stats.bonus_attack
		# Aqui vai ser acessado o valor de ataque do player 
		
		# Função para atualizar a vida do inimigo subtraindo o dano do player de sua vida
		update_health(player_attack)
		
	# Verificar se a área é uma área de feitiço
	elif area is FireSpell:
		update_health(area.spell_damage) # Atualizar avida do inimigo subtraindo o dano do ataque mágico
		set_deferred('monitoring', false) # Desabilitar o monitoramento dos corpos entrando na área de colisão
		# Isso vai permitir que tenha um tempo entre o inimigo ser atingido por diferentes bolas de fogo e tomar dano
		timer.start(invulnerability_timer)
		
func update_health(damage: int) -> void:
	health -= damage # A vida do inimigo vai ser subtraído do dano sofrido
	# Atualizar a popup com o dano do inimigo
	
	# Atualizar a barra de vida
	enemy_bar.update_bar(health)
	
	enemy.spawn_floating_text('-', 'Damage', damage)
	
	if health <= 0: # Condição de morte do inimigo
		enemy.can_die = true # Flag de morte do inimigo
		return # Para a execução do código, que está baixo
		
	enemy.can_hit = true # O inimigo não está com sua vida zerada ou negativa, então leva o dano
	
# Função ṕpara atualizar o tempo de invencibilidade ao tomar dano mágico
func on_timer_timeout():
	set_deferred('monitoring', true) # Acabou a invulnerabilidade e pode tomar dano mágico de novo
"

[sub_resource type="RectangleShape2D" id=11]
extents = Vector2( 11.875, 8.75 )

[sub_resource type="RectangleShape2D" id=12]
extents = Vector2( 34, 6.5 )

[sub_resource type="Animation" id=1]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Texture:hframes")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 9 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Texture:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ ExtResource( 3 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Texture:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("EnemyAttackArea/Collision:disabled")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("EnemyAttackArea:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=5]
resource_name = "attack_left"
tracks/0/type = "value"
tracks/0/path = NodePath("Texture:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Texture:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Texture:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("EnemyAttackArea/Collision:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("EnemyAttackArea:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=6]
resource_name = "attack_right"
tracks/0/type = "value"
tracks/0/path = NodePath("Texture:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Texture:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Texture:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("EnemyAttackArea/Collision:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("EnemyAttackArea:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -4, 0 ) ]
}

[sub_resource type="Animation" id=7]
resource_name = "dead"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("Texture:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 5 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Texture:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Texture:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ false ],
"method": "set_physics_process"
} ]
}

[sub_resource type="Animation" id=2]
resource_name = "hit"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("Texture:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 4 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Texture:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Texture:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ false ],
"method": "set_physics_process"
} ]
}

[sub_resource type="Animation" id=3]
resource_name = "idle"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Texture:hframes")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 9 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Texture:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 3 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Texture:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8 ]
}

[sub_resource type="Animation" id=8]
resource_name = "kill"
tracks/0/type = "value"
tracks/0/path = NodePath("Texture:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 5 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Texture:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Texture:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 3 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=4]
resource_name = "run"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Texture:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 6 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Texture:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 6 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Texture:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5 ]
}

[node name="Crabby" instance=ExtResource( 1 )]
scale = Vector2( 0.8, 0.8 )
script = ExtResource( 7 )
speed = 35
proximity_threshold = 20
raycast_default_position = -16
enemy_exp = 70

[node name="Texture" parent="." index="0"]
texture = ExtResource( 3 )
hframes = 9
script = ExtResource( 8 )

[node name="Collision" parent="." index="1"]
position = Vector2( 1, 4.5 )
shape = SubResource( 9 )

[node name="DetectionArea" parent="." index="2"]
visible = true

[node name="Collision" parent="DetectionArea" index="0"]
visible = false
position = Vector2( 0, -2.5 )
shape = SubResource( 10 )

[node name="CollisionArea" parent="." index="3"]
script = SubResource( 13 )
health = 14
invulnerability_timer = 1.2

[node name="Collision" parent="CollisionArea" index="0"]
position = Vector2( 0.625002, 3.75 )
scale = Vector2( 0.999999, 0.999999 )
shape = SubResource( 11 )

[node name="EnemyAttackArea" parent="." index="4"]
damage = 5
invencibility_timer = 1.2

[node name="Collision" parent="EnemyAttackArea" index="0"]
position = Vector2( 2, 5.5 )
shape = SubResource( 12 )
disabled = false

[node name="Animation" parent="." index="5"]
anims/RESET = SubResource( 1 )
anims/attack_left = SubResource( 5 )
anims/attack_right = SubResource( 6 )
anims/dead = SubResource( 7 )
anims/hit = SubResource( 2 )
anims/idle = SubResource( 3 )
anims/kill = SubResource( 8 )
anims/run = SubResource( 4 )

[node name="FloorRay" parent="." index="6"]
visible = true
position = Vector2( -16, 0 )
cast_to = Vector2( 0, 20 )

[node name="EnemyBar" parent="." index="9"]
margin_left = -22.5
margin_top = -30.0
margin_right = -22.5
margin_bottom = -30.0
rect_scale = Vector2( 0.7, 0.7 )

[node name="HealthBar" parent="EnemyBar/BarBackground" index="0"]
value = 0.0

[node name="Tween" type="Tween" parent="." index="10"]
